
Answers: <Google Sheet link>

Please answer the below core-java Questions:


Q: 01... What jdk contains or composed of and define each components?
Answer:

The Java Developer's Kit contains a variety of tools and Java development information. Following is a list of the main components of the JDK:

 Q:1... The Runtime Interpreter

     The Java runtime interpreter (java) is a stand-alone version of the Java interpreter built into the HotJava browser.
     The runtime interpreter provides the support to run Java executable programs in compiled, bytecode format.

 2.. The Compiler

     The Java compiler (javac) is used to compile Java source code files into executable Java bytecode classes.
     In Java, source code files have the extension .java.
     The Java compiler takes files with this extension and generates executable class files with the .class extension.
     The compiler creates one class file for each class defined in a source file. This means that many times a single Java
     source code file will compile into multiple executable class files. When this happens,it means that the source file contains multiple class definitions.

 3... The Applet Viewer

     The applet viewer is a tool that serves as a minimal test bed for final release Java applets.
     We can use the applet viewer to test your programs instead of having to wait for HotJava to support the final release of Java.

 4. The Debugger
     Java Development Kit (JDK) includes a debugger tool, called jdb,
     that can be used to monitor the execution of applications; it also can locate, and remove bugs in the code.
     The Java Debugger, jdb, is a simple command-line debugger for Java classes.
     It is a demonstration of the Java Platform Debugger Architecture that provides inspection and debugging of a local or remote Java Virtual Machine.

 5. The Class File Disassembler

     A disassembler is a program that converts machine code into low-level symbolic code.
     Since this command disassembles the Java class file, we'll call it our Java disassembler.
     This command basically tells us that what is inside the class file.


 6. The Header and Stub File Generator
     javah produces C header files and C source files from a Java class. These files provide the connective glue that allow your Java and C code to interact.
     javah generates C header and source files that are needed to implement native methods. The generated header and source files are used by C programs
     to reference an object's instance variables from native source code.
     The .h file contains a struct definition whose layout parallels the layout of the corresponding class.
     The fields in the struct correspond to instance variables in the class.
     The stubs file contains native language code that provides the glue that holds the Java class and its parallel native language structure together.



 7. The Documentation Generator
      The document generated by the javadoc tool from the doc comments in Java source code.
      he default generated document is in HTML and is created by the standard doclet. name. A name of a program element written in the Java Language -- that is,
      the name of a package, class, interface, field, constructor or method.

 8. Applet Demos
      Applet is a special type of program that is embedded in the webpage to generate the dynamic content.
      It runs inside the browser and works at client side.

 9. API Source Code
        An application program interface (API) is a set of routines, protocols, and tools for building software applications.
        Basically, an API specifies how software components should interact.



 Q: 2... What is IDE?
        "An IDE, or Integrated Development Environment, enables programmers to consolidate the
         different aspects of writing a computer program.
         IDEs increase programmer productivity by combining common activities
         of writing software into a single application: editing source code, building executables, and debugging. "


Q: 03...What are the IDEs available in the market to support java?

    1. BlueJ
    2. Codenvy
    3. DrJava
    4. Eclipse
    5. Greenfoot
    6. IntelliJ IDEA
    7. JCreator
    8. (Oracle) JDeveloper
    9. jGRASP
    10. MyEclipse
    11. NetBeans
    12. RAD for WebSphere Software (Rational Application Developer)
    13. Xcode


 Q: 04.. Explain the entire java life cycle.

    "The Java application life cycle can be illustrated as in Figure, “The Java Life Cycle”.
    We can use any text editor to create the high-level Java text file. This file is saved as a .java file on the disk.
    We then compile this text file using the Java compiler, which result in a .class file being created on the disk.
    The .class file contains the bytecodes. The file is then loaded into memory by the class loader.
    The bytecode verifier confirms that the bytecodes are valid and not hostile.
    Finally, the JVM reads the bytecodes in memory and translates them into machine code."

  Q: 05... what is class?

      A class is the blueprint from which individual objects are created. or
      class is the blueprint/structure of ojject.

 Q: 06.... What is object?

        Object is the representative of class.

Q: 07... What is the entry point of an application?
       The main method is the entry point of a Java application. Specifically、when the Java Virtual Machine is told to run an application
       by specifying its class (by using the java application launcher),
       it will look for the main method with the signature of public static void main(String[])

Q: 08... Why main is static?
       Java program's main method has to be declared static because keyword static allows main to be called without
       creating an object of the class in which the main method is defined.

Q:09... Which class is the superclass of all classes?
     Object is the super class of all other classes you use, including the ones you implemented.
     And you'll see the following methods are inherited from Object in every class. java.lang.Object is a super class
     of any class by default. The root class of the Java class hierarchy.


Q:10.... What is difference between path and classpath variables?
   Both are the Environment variables, which is mainly used to set with some values which is in some location and used in some other locations.

   Major Differences between Path and Classpath is:

   A).Path is an environment variable which is used by the operating system to find the executables.
   Classpath is an environment variable which is used by the Java compiler to find the path, of classes.ie in J2EE we give the path of jar files.
   B).PATH is nothing but setting up an environment for operating system. Operating System will look in this PATH for executables.
   Classpath is nothing but setting up the environment for Java. Java will use to find compiled classes.
   C).Path refers to the system while classpath refers to the Developing Envornment.

   In path we set the path of executables while in
   classpath we set path of jars for compiling classes.


Q: 11.... What is the difference between an Interface and Abstract class?

    Abstract class can have abstract and non-abstract methods and doesn't support multiple inheritance.
    Also can have final, non-final, static and non-static variables.

    Interface can have only abstract methods. Since Java 8, it can have default and static methods also. Interface supports multiple inheritance.
    Interface has only static and final variables.




Q: 12... Can you make an Object from an Interface and Abstract class ? if not how do you use it ?

    No! A class that is declared using “abstract” keyword is known as abstract class.
    It can have abstract methods(methods without body) as well as concrete methods (regular methods with body).
    A normal class(non-abstract class) cannot have abstract methods.

    No, designers did not provide a way. As you cannot force, you cannot create an instance of an abstract class. ... Because an
    abstract class is an incomplete class (incomplete in the sense it contains abstract methods without body and output)
    we cannot create an instance or object; the same way you say for an interface.

Q: 13... what is Access Specifier?

   Access specifiers are used to control the visibility of members like classes, variables and methods.
   There are three access specifiers: public, private and protected. We shall see only about the public and private access specifiers for now.
   Protected access specifier comes into picture when inheritance is implemented.

Q:14...What is OOP ? Define each feature of java OOP.

      OOP concepts in Java are the main ideas behind Java’s Object Oriented Programming.
      They are an abstraction, encapsulation, inheritance, and polymorphism. Grasping them is key to understanding how Java works.
      Basically, Java OOP concepts let us create working methods and variables, then re-use all or part of them without compromising security.

 Abstraction.
      Abstraction means using simple things to represent complexity. We all know how to turn the TV on, but we don’t need to
      know how it works in order to enjoy it. In Java, abstraction means simple things like objects, classes, and variables represent
      more complex underlying code and data. This is important because it lets avoid repeating the same work multiple times.

Encapsulation.
      This is the practice of keeping fields within a class private, then providing access to them via public methods.
      It’s a protective barrier that keeps the data and code safe within the class itself.
      This way, we can re-use objects like code components or variables without allowing open access to the data system-wide.

Inheritance.
      This is a special feature of Object Oriented Programming in Java. It lets programmers create new classes that share some of the
      attributes of existing classes. This lets us build on previous work without reinventing the wheel.

Polymorphism.
      This Java OOP concept lets programmers use the same word to mean different things in different contexts.
      One form of polymorphism in Java is method overloading. That’s when different meanings are implied by the code itself.
      The other form is method overriding. That’s when the different meanings are implied by the values of the supplied variables.


Q:15...What is Java Package and which package is imported by default?


What is API? Name list of API that you have used so far.
        An application program interface (API) is a set of routines, protocols, and tools for building software applications.
        Basically, an API specifies how software components should interact.

Name list of API that you have used so far.


Q: 16....Does java support multiple inheritance, explain why or why not?

    No, Java Does not support multiple inheritance because it creates confusion and complexity. T
   to avoid ambiguity error java does not support multiple inheritance through class. But through the interface, multiple inheritance is possible in java.


Q:17....What is method overloading and when it happens?

     Method Overloading is a feature that allows a class to have more than one method having the same name, if their argument lists are different.
     It is similar to constructor overloading in Java, that allows a class to have more than one constructor having different argument lists.

Explain exceptions in java and how to handle it.
     ava exception handling is managed via five keywords: try, catch, throw, throws, and finally. ... Any exception that is thrown out of a method must be
     specified as such by a throws clause.Any code that absolutely must be executed after a try block completes is put in a finally block.

What is static keyword in java? How it has been used in variables and methods ?
      The static keyword is used in java mainly for memory management. It is used with variables, methods, blocks and nested class.
      It is a keyword that are used for share the same variable or method of a given class. This is used for a constant variable or
      a method that is the same for every instance of a class.

What is final and how it has been used variables and methods?
       First of all, final is a non-access modifier applicable only to a variable, a method or a class.\

       When a variable is declared with final keyword, its value can’t be modified, essentially, a constant. This also means that you must
       initialize a final variable. If the final variable is a reference, this means that the variable cannot be re-bound to reference another object,
       but internal state of the object pointed by that reference variable can be changed i.e. you can add or remove elements from final array
       or final collection.

      A final method cannot be overridden. The Object class does this—a number of its methods are final.We must declare methods
      with final keyword for which we required to follow the same implementation throughout all the derived classes.

What is final, finally and finalize?
      Final is used to apply restrictions on class, method and variable.
      Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
	  Finally is used to place important code, it will be executed whether exception is handled or not.
	  Finalize is used to perform clean up processing just before object is garbage collected.

	  Final is a keyword.	Finally is a block.	Finalize is a method.

What is a constructor ?

      Constructor is a block of code that initializes the newly created object. A constructor resembles an instance method in java
      but it’s not a method as it doesn’t have a return type. In short constructor and method are different(More on this at the end of this guide).
      People often refer constructor as special type of method in Java.

     Constructor has same name as the class name.

Can we have multiple constructors in a class?
    Yes we can.
    We can define as many constructors as we need.
    When a Java class contains multiple constructors, we say that the constructor is overloaded (comes in multiple versions)

If we don't have a constructor declared, what is called during the object creation?
     All classes have at least one constructor. If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor,
      called the default constructor. ... If the parent has no constructor ( Object does have one), the compiler will reject the program.

What is "this" keyword in java ?
     Keyword THIS is a reference variable in Java that refers to the current object.

     The various usages of 'THIS' keyword in Java are:

     It can be used to refer instance variable of current class
     It can be used to invoke or initiate current class constructor
     It can be passed as an argument in the method call
     It can be passed as argument in the constructor call
     It can be used to return the current class instance


What is "super" keyword in java? How many possible way can you use?

         super is a keyword. It is used inside a sub-class method definition to call a method defined in the super class.
         Private methods of the super-class cannot be called.
         Only public and protected methods can be called by the super keyword.

        It can be used three (3) possible way, #
        1) super.<variable_name> refers to the variable of variable of parent class.
        2) super() invokes the constructor of immediate parent class.
        3) super.<method_name> refers to the method of parent class.

What is JVM stand for ?
    Java Virtual Machine.


Is JVM platform independent?
      No!
      while JAVA is platform-independent language, the JVM is platform-dependent.
      Different JVM is designed for different OS and byte code is able to run on different OS.


What version of java are you using?
     JDK 8 / Java 1.8

What is JAR stand for ?
      JAR stands for "Java ARchive". A JAR file is basically a zip-file which contains a couple of class
      files and a text file containing some meta information.

      A JAR (Java ARchive) is a package file format typically used to aggregate many Java class files and associated metadata
       and resources (text, images, etc.) into one file for distribution.


What is the difference between JDK and JVM?
      JDK is for development purpose. JDK contains JVM so that we can run our java program.
      JVM is the heart of java programming language and provides platform independence.

      Java Development Kit is the core component of Java Environment and provides all the tools, executables and binaries required to
      compile, debug and execute a Java Program. JDK is a platform-specific software and that’s why we have separate installers for
      Windows, Mac, and Unix systems.

      JVM is the heart of Java programming language. When we run a program, JVM is responsible for converting Byte code to the machine specific code.
      JVM is also platform dependent and provides core java functions like memory management, garbage collection, security etc.
      JVM is customizable and we can use java options to customize it, for example allocating minimum and maximum memory to JVM.
      JVM is called virtual because it provides an interface that does not depend on the underlying operating system and machine hardware.
      This independence from hardware and the operating system is what makes java program write-once-run-anywhere


What is the difference between JVM and JRE?
       “Java Runtime Environment” and may also be written as “Java RTE.”The Java Runtime Environment provides the minimum requirements
       for executing a Java application; it consists of the Java Virtual Machine , core classes, and supporting files.


What is compile time and run time?
        Runtime and compile time are programming terms that refer to different stages of software program development. Compile-time is the instance
        where the code you entered is converted to executable while Run-time is the instance where the executable is running. ... Compiler crashes (Rarely)


What is heap?
      The Java virtual machine has a heap that is shared among all Java virtual machine threads.
       The heap is the runtime data area from which memory for all class instances and arrays is allocated.

      The heap is created on virtual machine start-up. Heap storage for objects is reclaimed by an automatic storage management system
      (known as a garbage collector); objects are never explicitly deallocated.

      The heap may be of a fixed size or may be expanded as required by the computation and may be contracted if a larger heap becomes unnecessary.
      The memory for the heap does not need to be contiguous.

// .....How java manage it's memory?


What is the difference between String, StringBuffer and StringBuilder?

       Generally, String is a sequence of characters. But in Java, string is an object that represents a sequence of characters.
       Java String class provides a lot of methods to perform operations on string such as compare(), concat(), equals(), split(),
       length(), replace(), compareTo(), intern(), substring() etc.

       StringBuffer	StringBuilder
       1)	StringBuffer is synchronized i.e. thread safe. It means two threads can't call the methods of StringBuffer simultaneously.
       StringBuilder is non-synchronized i.e. not thread safe. It means two threads can call the methods of StringBuilder simultaneously.

       2)	StringBuffer is less efficient than StringBuilder.	StringBuilder is more efficient than StringBuffer.


What is Singleton class?
       In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time. ...
       To design a singleton class: Make constructor as private. Write a static method that has return type object of this singleton class.

What is Serialization and Deserialization?
      Serialization is a mechanism of converting the state of an object into a byte stream.
      Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory.



when to use transient variable in java?

      transient is a variables modifier used in serialization.
      At the time of serialization, if we don’t want to save value of a particular variable in a file, then we use transient keyword


Difference between while and do..while loop?
    While loop executes the code block only if the condition is True. In Java Do While loop,
    condition is tested at the end of the loop so Do While executes
    the statements in the code block at least once even if the condition Fails.

    the main difference between a while loop and do while loop is that while loop check condition before iteration of the loop,
     whereas do-while loop, checks the condition after the execution of the statements inside the loop

What is Enum?
     Enums are used when we know all possible values at compile time, such as choices on a menu, rounding modes, command line flags, etc.
     It is not necessary that the set of constants in an enum type stay fixed for all time. In Java (from 1.5),
      enums are represented using enum data type.

What is Iterator?
    Iterators are used in Collection framework in Java to retrieve elements one by one.

//Which one will take more memory, an int or Integer?



Why is String Immutable in Java?
    The string is Immutable in Java because String objects are cached in String pool. ...
    Another reason of why String class is immutable could die due to HashMap. Since Strings are very popular as HashMap key,
     it's important for them to be immutable so that they can retrieve the value object which was stored in HashMap.

What is constructor chaining in Java?


The difference between Serial and Parallel Garbage Collector?

What is JIT stands for?

Explain Java Heap space and Garbage collection?

Can you guarantee the garbage collection process?

What is the difference between stack and heap in Java?

What is reflection in java and why is it useful?

what is multithreading in java?

What is the use of synchronization in Java?

What is Framework?

What are the testing Framework available in java?

Difference between jUnit and testNG?

What are the dependencies for this project?

what is dependency injection in java?

What is static binding and dynamic binding?

What is Collections Framework?

What is Collection and Collections?

Explain what is main method?

What is StringBuffer and String Builder?

What do you understand by Thread Safe?

What are the latest changes in Java 8?

What do you understand by default method in Java?










